#!/usr/bin/env sh

. "$(which sxmo_common.sh)"

REDLED_PATH="/sys/class/leds/red:indicator/brightness"
BLUELED_PATH="/sys/class/leds/blue:indicator/brightness"

date >> /tmp/rtc

finish() {
	kill $BLINKPID

	echo 0 > "$REDLED_PATH"
	echo 0 > "$BLUELED_PATH"

	# Going back to crust
	if [ "$(sxmo_screenlock.sh getCurState)" != "unlock" ]; then
		sxmo_screenlock.sh rtc "$SXMO_RTCWAKEINTERVAL"
	fi

	exit 0
}

trap 'finish' TERM INT EXIT

blink() {
	while [ "$(sxmo_screenlock.sh getCurState)" != "unlock" ]; do
		echo 1 > "$REDLED_PATH"
		echo 0 > "$BLUELED_PATH"
		sleep 0.5
		echo 0 > "$REDLED_PATH"
		echo 1 > "$BLUELED_PATH"
		sleep 0.5
	done
}

blink &
BLINKPID=$!

if pidof mosquitto_sub; then
       sleep 4
else
       NMSTATE=$(nmcli -c no -t -f DEVICE,STATE con show)
       if ! echo "$NMSTATE" | grep -q "wlan0:activated"; then
           nmcli con up ifname wlan0
       fi
       if ! echo "$NMSTATE" | grep -q "cdc-wdm0:activated"; then
           nmcli con up ifname cdc-wdm0
       fi
       #wait for connection (max 15 s) and process three seconds of notifications before disconnecting
       ping -c 1 -W 15 anaproy.nl >/dev/null 2>/dev/null && \
       MQTT_SILENT_START=1 MQTT_SILENT_END=1 MQTT_OPTIONS="-W 3" ~/dotfiles/notifyclient.sh
fi
