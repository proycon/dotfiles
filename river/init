#!/bin/sh

killall client.sh
rm /tmp/locked
export QT_AUTO_SCREEN_SCALE_FACTOR=0
export QT_SCALE_FACTOR=1.8
export ELM_SCALE=1.8
export XDG_CURRENT_DESKTOP=river
export XDG_SESSION_TYPE=wayland
export XDG_SESSION_DESKTOP=river
export GDK_BACKEND=wayland
export MOZ_ENABLE_WAYLAND=1
export SDL_VIDEODRIVER=wayland
export GLFW_IM_MODULE=fcitx
#export GTK_IM_MODULE=fcitx
export INPUT_METHOD=fcitx
export XMODIFIERS=@im=fcitx
export IMSETTINGS_MODULE=fcitx
export QT_IM_MODULE=fcitx
#export GDK_DPI_SCALE=2    # only needed for firefox, messes up others
export BEMENU_BACKEND=wayland

# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

HOSTNAME=$(hostname)
if [ "$HOSTNAME" = "trantor" ]; then
    KB_OPTS="-options lv3:ralt_switch,caps:ctrl_modifier,altwin:swap_alt_win,grp:alt_shift_toggle"
else
    KB_OPTS=
fi

kanshi -c ~/dotfiles/kanshi/$HOSTNAME.config &

pkill -f /usr/lib/xdg-desktop-portal-wlr
/usr/lib/xdg-desktop-portal-wlr &

# Super+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal Super+Shift Return spawn foot

# Super+Q to close the focused view
riverctl map normal Super+Shift Q close

# Super+Shift+E to exit river
riverctl map normal Super+Shift Backspace exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super Return zoom

# Mod+H and Mod+L to decrease/increase the main ratio of rivercarro
riverctl map normal Super H send-layout-cmd rivercarro "main-ratio -0.05"
riverctl map normal Super L send-layout-cmd rivercarro "main-ratio +0.05"

# Mod+Shift+H and Mod+Shift+L to increment/decrement the main count of rivercarro
riverctl map normal Super+Shift H send-layout-cmd rivercarro "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd rivercarro "main-count -1"

# Mod+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super Up    send-layout-cmd rivercarro "main-location top"
riverctl map normal Super Right send-layout-cmd rivercarro "main-location right"
riverctl map normal Super Down  send-layout-cmd rivercarro "main-location bottom"
riverctl map normal Super Left  send-layout-cmd rivercarro "main-location left"
# And for monocle
riverctl map normal Super M     send-layout-cmd rivercarro "main-location monocle"
# Cycle through layout
riverctl map normal Super period     send-layout-cmd rivercarro "main-location-cycle left,right,top,bottom"

# Add others rivercarro's commands the same way with the keybinds you'd like.
# e.g.
# riverctl map normal Super <keys> send-layout-cmd rivercarro "inner-gaps -1"
# riverctl map normal Super <keys> send-layout-cmd rivercarro "inner-gaps +1"
# riverctl map normal Super <keys> send-layout-cmd rivercarro "outer-gaps -1"
# riverctl map normal Super <keys> send-layout-cmd rivercarro "outer-gaps +1"
# riverctl map normal Super <keys> send-layout-cmd rivercarro "width-ratio -0.1"
# riverctl map normal Super <keys> send-layout-cmd rivercarro "width-ratio +0.1"


# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Shift H resize horizontal -100
riverctl map normal Super+Shift J resize vertical 100
riverctl map normal Super+Shift K resize vertical -100
riverctl map normal Super+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
#riverctl map normal Super 0 set-focused-tags $all_tags
#riverctl map normal Super+Shift 0 set-view-tags $all_tags

riverctl map normal Super F toggle-float
riverctl map normal Super+Shift F toggle-fullscreen

riverctl map normal Super+Control Up    send-layout-cmd rivercarro "main-location top"
riverctl map normal Super+Control Right send-layout-cmd rivercarro "main-location right"
riverctl map normal Super+Control Down  send-layout-cmd rivercarro "main-location bottom"
riverctl map normal Super+Control Left  send-layout-cmd rivercarro "main-location left"

#custom actions
riverctl map normal Super Space spawn 'bemenu-run --fn "Monospace 22" -l 20'
riverctl map normal Super+Shift space spawn 'rofi -sidebar-mode -show drun'
riverctl map normal Super F1 spawn 'foot aerc'
riverctl map normal Super E spawn ~/dotfiles/scripts/translate.sh
riverctl map normal Alt F2 spawn ~/bin/lala
riverctl map normal Alt+Shift, F2 spawn 'killall snapclient'
riverctl map normal Super F2 spawn "foot --title nvim ~/bin/tm nvim"
riverctl map normal Super F3 spawn ~/dotfiles/scripts/homecommand.sh
riverctl map normal Super F4 spawn ~/dotfiles/scripts/screenshot.sh
riverctl map normal Super+Shift F4 spawn "~/dotfiles/scripts/screenshot.sh region"
riverctl map normal Super+Control+Shift F4 spawn "~/dotfiles/scripts/screenshot.sh annotate"
riverctl map normal Alt F3 spawn "~/dotfiles/scripts/homecommand.sh mute"
riverctl map normal Alt F5 spawn ~/dotfiles/scripts/emojiselect
riverctl map normal Super F6 spawn "foot --title newsboat newsboat"
riverctl map normal Super+Shift F6 spawn "foot --title ncmpcpp ncmpcpp"
riverctl map normal Super F7 spawn "~/dotfiles/scripts/startchat.sh"
riverctl map normal Super F8 spawn "foot --title ytfzt ytfzt -t"
riverctl map normal Super+Alt slash spawn "todo.sh rofi listall @work"
riverctl map normal Super+Shift slash spawn "todo.sh timetrack stop"
riverctl map normal Super+Control slash spawn "foot -e todo.sh edit"
riverctl map normal Super backslash spawn "todo.sh rofi list -@work"
riverctl map normal Super+Alt backslash spawn "todo.sh rofi listall -@work"
riverctl map normal Super+Shift backslash spawn "todo.sh timetrack stop"
riverctl map normal Super+Control backslash spawn "foot -e todo.sh edit"
riverctl map normal Super dead_acute spawn "todo.sh rofi list @calendar"
riverctl map normal Super dead_tilde spawn newmail
riverctl map normal Super dead_grave spawn curmail
riverctl map normal Super w spawn ~/dotfiles/scripts/buku-dmenu
riverctl map normal Super u spawn "~/dotfiles/scripts/dmenu-files.sh /nettmp -t"
riverctl map normal Super o spawn "~/dotfiles/scripts/dmenu-files.sh /home/proycon -t"
riverctl map normal Super p spawn ~/dotfiles/scripts/passmenu.sh
riverctl map normal Super y spawn "foot -e ytfzf --async-thumbnails --preview-side=right -t -T mpv --loop --rii"
riverctl map normal Super+Shift p spawn ~/dotfiles/scripts/otpmenu.sh
riverctl map normal Super n spawn ~/dotfiles/scripts/network-menu.sh
riverctl map normal Super+Shift n spawn ~/dotfiles/scripts/startnumen.sh
riverctl map normal Super+Control k spawn ~/dotfiles/scripts/killmenu.sh
riverctl map normal Super b spawn ~/dotfiles/scripts/switchbg.sh
riverctl map normal Super escape spawn ~/dotfiles/scripts/lock.sh
riverctl map normal Super+Shift escape spawn ~/dotfiles/scripts/suspend.sh

riverctl map normal Super+Alt F9 spawn "riverctl keyboard-layout $KB_OPTS proylatin && play ~/dotfiles/media/key.wav"
riverctl map normal Super+Alt F10 spawn "riverctl keyboard-layout $KB_OPTS proyeo && play ~/dotfiles/media/key.wav"
riverctl map normal Super+Shift+Alt F10 spawn "riverctl keyboard-layout $KB_OPTS proyipa && play ~/dotfiles/media/key.wav"
riverctl map normal Super+Alt F11 spawn "riverctl keyboard-layout $KB_OPTS proyru && play ~/dotfiles/media/key.wav"
riverctl map normal Super+Alt F12 spawn "riverctl keyboard-layout $KB_OPTS proyar && play ~/dotfiles/media/key.wav"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x1affff
riverctl border-color-unfocused 0x595959

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

riverctl keyboard-layout $KB_OPTS proylatin
# Set the default layout generator to be rivercarro and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivercarro
riverctl default-attach-mode bottom
riverctl set-cursor-warp on-focus-change
riverctl focus-follows-cursor always
rivercarro -outer-gaps 0 -inner-gaps 5 -per-tag &
swaybg -m fill -i ~/dotfiles/media/forest.jpg & waybar & mako & dbus-launch gnome-keyring-daemon -s --components=pkcs11,secrets,ssh,gpg & udiskie & setsid /home/proycon/projects/lighthome/client.sh & ~/dotfiles/scripts/handlehyprland.sh &
#sleep 60 && swayidle timeout 300 '/home/proycon/dotfiles/scripts/lock.sh' timeout 900 'hyprctl dispatch dpms off' resume 'hyprctl dispatch dpms on'
dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
fcitx5 &
aa-notify -p -s 1 -w 60 -f /var/log/audit/audit.log &
#view sources with: pactl list short sources
pactl set-default-sink alsa_output.pci-0000_17_00.6.3.analog-stereo.monitor
pactl set-default-source alsa_input.usb-Samson_Technologies_Samson_C01U_Pro_Mic-00.3.analog-stereo 
gsettings set org.gnome.desktop.interface text-scaling-factor 1.8
